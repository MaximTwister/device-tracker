# Generated by Django 4.1.1 on 2022-10-02 09:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("collector", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TelegramChat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("telegram_chat_id", models.IntegerField()),
            ],
        ),
        migrations.RenameField(
            model_name="device",
            old_name="failed_ping_cycles",
            new_name="missed_pings",
        ),
        migrations.RenameField(
            model_name="device",
            old_name="failed_ping_cycles_threshold",
            new_name="missed_pings_threshold",
        ),
        migrations.RenameField(
            model_name="telegramaccount",
            old_name="telegram_id",
            new_name="telegram_user_id",
        ),
        migrations.AddField(
            model_name="network",
            name="added_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="added_networks",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="network",
            name="network_key",
            field=models.CharField(default=None, max_length=4, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="telegramaccount",
            name="networks_to_admin",
            field=models.ManyToManyField(related_name="admins", to="collector.network"),
        ),
        migrations.AddField(
            model_name="telegramaccount",
            name="owner",
            field=models.OneToOneField(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegram_account",
                to=settings.AUTH_USER_MODEL,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="device",
            name="mac_addr",
            field=models.CharField(max_length=17, unique=True),
        ),
        migrations.AlterField(
            model_name="device",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devices",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sessions",
                to="collector.device",
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="network",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sessions",
                to="collector.network",
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="status",
            field=models.CharField(
                choices=[("A", "active"), ("C", "closed"), ("F", "closed forcibly")],
                default="A",
                max_length=1,
            ),
        ),
        migrations.DeleteModel(
            name="DeviceOwner",
        ),
        migrations.AddField(
            model_name="telegramaccount",
            name="chats",
            field=models.ManyToManyField(
                related_name="users", to="collector.telegramchat"
            ),
        ),
    ]
